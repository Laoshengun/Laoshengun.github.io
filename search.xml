<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>jQuery笔记(1)</title>
      <link href="/2020/02/28/jquerynotes1/"/>
      <url>/2020/02/28/jquerynotes1/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery-笔记（1）"><a href="#jQuery-笔记（1）" class="headerlink" title="jQuery 笔记（1）"></a>jQuery 笔记（1）</h1><h3 id="1-jQuery是什么"><a href="#1-jQuery是什么" class="headerlink" title="1.jQuery是什么"></a>1.jQuery是什么</h3><p>一个JavaScript库</p><h3 id="2-jQuery的引入"><a href="#2-jQuery的引入" class="headerlink" title="2.jQuery的引入"></a>2.jQuery的引入</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>页面标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcss.com/jquery/2.2.4/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="3-文档就绪事件"><a href="#3-文档就绪事件" class="headerlink" title="3.文档就绪事件"></a>3.文档就绪事件</h3><p>等待HTML文档完全加载并准备就绪</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//在这写jQuery代码</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h3 id="4-jQuery的基本语法"><a href="#4-jQuery的基本语法" class="headerlink" title="4.jQuery的基本语法"></a>4.jQuery的基本语法</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"selector"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>selector是选择器，action是执行的动作</p><h3 id="5-jQuery的常用选择器"><a href="#5-jQuery的常用选择器" class="headerlink" title="5.jQuery的常用选择器"></a>5.jQuery的常用选择器</h3><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//所有&lt;div>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#test"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//id="test"的元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".menu"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//class="menu"的所有元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div.menu"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 所有&lt;div>元素与class="menu"</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p:first"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 第一个&lt;p>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"h1, p"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 所有&lt;h1>和所有&lt;p>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div p"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 所有&lt;div>元素后代的&lt;p>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// DOM的所有元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取当前HTML元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p.intro"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取class为intro的&lt;p>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p:first"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取第一个&lt;p>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul li:first"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取第一个&lt;ul>元素的第一个&lt;li>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"ul li:first-child"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取每个&lt;ul>元素的第一个&lt;li>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"[href]"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取带有href属性的元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[target='_blank']"</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//所有target属性等于"_blank"的&lt;a>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[target!='_blank']"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取所有target属性值不等于"_blank"的&lt;a>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">":button"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取所有type="button"的&lt;input>元素和&lt;button>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tr:even"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取偶数位置的&lt;tr>元素</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tr:odd"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//选取奇数位置的&lt;tr>元素</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anki教程01</title>
      <link href="/2020/02/02/anki1/"/>
      <url>/2020/02/02/anki1/</url>
      
        <content type="html"><![CDATA[<h1 id="Anki的安装及使用"><a href="#Anki的安装及使用" class="headerlink" title="Anki的安装及使用"></a>Anki的安装及使用</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Anki-2-1-15-windows-64-exe"><a href="#Anki-2-1-15-windows-64-exe" class="headerlink" title="Anki-2.1.15-windows(64).exe"></a>Anki-2.1.15-windows(64).exe</h3><p>百度网盘：<a href="https://pan.baidu.com/s/1zTbNTx1Tde3ger9Rq2USjg" target="_blank" rel="noopener">https://pan.baidu.com/s/1zTbNTx1Tde3ger9Rq2USjg</a></p><p>提取码：ykfv</p><p>下载安装即可</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="1-创建记忆库"><a href="#1-创建记忆库" class="headerlink" title="1.创建记忆库"></a>1.创建记忆库</h3><p>点击界面下方的创建记忆库</p><p>输入你想创建的记忆库名称，点击ok完成</p><p><img src="http://q52laurup.bkt.clouddn.com/blog_Anki1_01.png" alt=""></p><h3 id="2-创建模板"><a href="#2-创建模板" class="headerlink" title="2.创建模板"></a>2.创建模板</h3><ol><li>点击左上方工具栏里的 ‘’工具’’ 下拉框</li><li>选择 ‘’管理笔记类型’’</li><li>点击 ‘’添加’’ ，在弹窗中选择 ‘’基础’’ 即可，点击ok，输入名称，完成</li></ol><p><img src="http://q52laurup.bkt.clouddn.com/blog_Anki1_02.png" alt=""></p><h3 id="3-编辑卡片"><a href="#3-编辑卡片" class="headerlink" title="3.编辑卡片"></a>3.编辑卡片</h3><p>点击笔记类型对话框右边的 ‘’卡片’’ ，可以对卡片进行编辑，如下图</p><p><img src="http://q52laurup.bkt.clouddn.com/blog_Anki1_03.png" alt=""></p><h3 id="4-添加字段"><a href="#4-添加字段" class="headerlink" title="4.添加字段"></a>4.添加字段</h3><p>点击笔记类型对话框右边的 ‘’字段’’ ，可以对字段进行操作</p><p>需要添加先前在卡片编辑中用到的字段</p><p>编辑完成后点击close即可</p><p><img src="http://q52laurup.bkt.clouddn.com/blog_Anki1_04.png" alt=""></p><h3 id="5-添加记忆卡"><a href="#5-添加记忆卡" class="headerlink" title="5.添加记忆卡"></a>5.添加记忆卡</h3><p>点击界面上方的 “添加”，即可添加记忆卡</p><p><img src="http://q52laurup.bkt.clouddn.com/blog_Anki1_05.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anki </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02.两数相加</title>
      <link href="/2020/01/21/leetcode2/"/>
      <url>/2020/01/21/leetcode2/</url>
      
        <content type="html"><![CDATA[<h1 id="02-两数相加"><a href="#02-两数相加" class="headerlink" title="02.两数相加"></a>02.两数相加</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。</p><p>如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。</p><p>您可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例：</p><p>输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>输出：7 -&gt; 0 -&gt; 8<br>原因：342 + 465 = 807</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/add-two-numbers" target="_blank" rel="noopener">https://leetcode-cn.com/problems/add-two-numbers</a></p><h2 id="第一次提交（2ms）"><a href="#第一次提交（2ms）" class="headerlink" title="第一次提交（2ms）"></a>第一次提交（2ms）</h2><p>参照别人提供的算法</p><p>作者：guanpengchn<br>链接：<a href="https://leetcode-cn.com/problems/add-two-numbers/solution/hua-jie-suan-fa-2-liang-shu-xiang-jia-by-guanpengc/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/add-two-numbers/solution/hua-jie-suan-fa-2-liang-shu-xiang-jia-by-guanpengc/</a></p><p>将两个链表看成是相同长度的进行遍历，如果一个链表较短则在前面补 000，比如 987 + 23 = 987 + 023 = 1010</p><p>每一位计算的同时需要考虑上一位的进位问题，而当前位计算结束后同样需要更新进位值</p><p>如果两个链表全部遍历完毕后，进位值为 1，则在新链表最前方添加节点 1</p><p>小技巧：对于链表问题，返回结果为头结点时，通常需要先初始化一个预先指针 pre，该指针的下一个节点指向真正的头结点head。使用预先指针的目的在于链表初始化时无可用节点值，而且链表构造过程需要指针移动，进而会导致头指针丢失，无法返回结果。</p><pre><code>/** * Definition for singly-linked list. * public class ListNode { *     int val; *     ListNode next; *     ListNode(int x) { val = x; } * } */class Solution {    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {        ListNode pre = new ListNode(0);        ListNode cur = pre;        int carry = 0;        while(l1 != null || l2 != null) {            int x = l1 == null ? 0 : l1.val;            int y = l2 == null ? 0 : l2.val;            int sum = x + y + carry;            carry = sum / 10;            sum = sum % 10;            cur.next = new ListNode(sum);            cur = cur.next;            if(l1 != null)                l1 = l1.next;            if(l2 != null)                l2 = l2.next;        }        if(carry == 1) {            cur.next = new ListNode(carry);        }        return pre.next;    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01.两数之和</title>
      <link href="/2020/01/17/leetcode1/"/>
      <url>/2020/01/17/leetcode1/</url>
      
        <content type="html"><![CDATA[<h1 id="01-两数之和"><a href="#01-两数之和" class="headerlink" title="01.两数之和"></a>01.两数之和</h1><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。</p><p>示例:</p><p>给定  nums = [2, 7, 11, 15], target = 9</p><p>因为  nums[0] + nums[1] = 2 + 7 = 9<br>所以 返回 [0, 1]</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/two-sum" target="_blank" rel="noopener">https://leetcode-cn.com/problems/two-sum</a></p><h2 id="第一次提交（37ms）"><a href="#第一次提交（37ms）" class="headerlink" title="第一次提交（37ms）"></a>第一次提交（37ms）</h2><p>利用双重循环，两两相加与目标值相比较（憨憨做法）</p><pre><code>class Solution {    public int[] twoSum(int[] nums, int target) {        int i, j;        int[] result = new int[2];         for(i = 0; i &lt; nums.length; i++){            for(j = 1 + i; j &lt; nums.length; j++){                if(nums[i] + nums[j] == target){                    result[0] = i;                    result[1] = j;                }            }        }        return result;    }}</code></pre><h2 id="第二次提交（3ms）"><a href="#第二次提交（3ms）" class="headerlink" title="第二次提交（3ms）"></a>第二次提交（3ms）</h2><p>参考了评论的答案</p><p>利用哈希表，原理如下</p><p>假设 target = a+b，即 b = target - a</p><p>循环数组，判断数 a 是否存在于哈希表</p><p>如果不存在，将 a 需要的数 b 和 a 的下标作为键值对存放于哈希表中 &lt;b, a的下标&gt;</p><p>如果存在，则此时的 a 等于先前存放于哈希表中的 b ，即 a’ = b，那么只需要根据 a’ 取出 a 的下标</p><p>返回一维数组 [a的下标, a’的下标] </p><p>(大佬牛逼)</p><pre><code>import java.util.HashMap;import java.util.Map;class Solution {    public int[] twoSum(int[] nums, int target) {        int[] result = new int[2];        //建立哈希表        HashMap&lt;Integer, Integer&gt; hash = new HashMap&lt;Integer, Integer&gt;();        for(int i = 0; i &lt; nums.length; i++){            if(hash.containsKey(nums[i])){                result[0] = hash.get(nums[i]);                result[1] = i;                return result;            }            hash.put(target-nums[i], i);        }        return result;    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap模态框登录窗口</title>
      <link href="/2020/01/10/20200110/"/>
      <url>/2020/01/10/20200110/</url>
      
        <content type="html"><![CDATA[<h1 id="Bootstrap模态框登录窗口"><a href="#Bootstrap模态框登录窗口" class="headerlink" title="Bootstrap模态框登录窗口"></a>Bootstrap模态框登录窗口</h1><p>关于bootstrap的引用</p><pre><code>    &lt;link type=&quot;text/css&quot; href=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;script src=&quot;https://cdn.bootcss.com/jquery/2.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;    &lt;script src=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="模态框登录窗口代码"><a href="#模态框登录窗口代码" class="headerlink" title="模态框登录窗口代码"></a>模态框登录窗口代码</h2><p>先上代码</p><pre><code>&lt;!--模态框--&gt;    &lt;div class=&quot;modal fade&quot; id=&quot;myModal&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-         labelledby=&quot;myModalLabel&quot; aria-hidden=&quot;true&quot;&gt;        &lt;div class=&quot;modal-dialog&quot;&gt;            &lt;div class=&quot;modal-content&quot;&gt;                &lt;!--模态框头部--&gt;                &lt;div class=&quot;modal-header&quot;&gt;                    &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot; aria-hidden=&quot;true&quot;&gt;                        &amp;times;                    &lt;/button&gt;                    &lt;h4 class=&quot;modal-title&quot; id=&quot;myModalLabel&quot;&gt;                        欢迎登录BlackBay                    &lt;/h4&gt;                &lt;/div&gt;                &lt;!--模态框主体--&gt;                &lt;div class=&quot;modal-body&quot;&gt;                    &lt;form class=&quot;form-horizontal&quot; role=&quot;form&quot;&gt;                        &lt;!--用户框--&gt;                        &lt;div class=&quot;form-group&quot;&gt;                            &lt;label for=&quot;username&quot; class=&quot;col-sm-2 control-label&quot;&gt;用户名&lt;/label&gt;                            &lt;div class=&quot;col-sm-10&quot;&gt;                                &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;username&quot; placeholder=&quot;username&quot; required=&quot;required&quot;&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;!--密码框--&gt;                        &lt;div class=&quot;form-group&quot;&gt;                            &lt;label for=&quot;password&quot; class=&quot;col-sm-2 control-label&quot;&gt;密码&lt;/label&gt;                            &lt;div class=&quot;col-sm-10&quot;&gt;                                &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;password&quot; placeholder=&quot;password&quot; required=&quot;required&quot;&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;!--记住密码--&gt;                        &lt;div class=&quot;form-group&quot;&gt;                            &lt;div class=&quot;col-sm-offset-2 col-sm-10&quot; &gt;                                &lt;div class=&quot;checkbox&quot;&gt;                                    &lt;label&gt;                                        &lt;input type=&quot;checkbox&quot;&gt;记住密码                                    &lt;/label&gt;                                &lt;/div&gt;                            &lt;/div&gt;                        &lt;/div&gt;                        &lt;!--登录按钮--&gt;                        &lt;div class=&quot;form-group&quot;&gt;                            &lt;div class=&quot;col-sm-offset-2 col-sm-10&quot;&gt;                                &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;登录&lt;/button&gt;                            &lt;/div&gt;                        &lt;/div&gt;                    &lt;/form&gt;                &lt;/div&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;</code></pre><h2 id="详细内容"><a href="#详细内容" class="headerlink" title="详细内容"></a>详细内容</h2><h3 id="modal"><a href="#modal" class="headerlink" title=".modal"></a>.modal</h3><pre><code> 用来把&lt;div&gt;的内容识别为模态框</code></pre><h3 id="fade"><a href="#fade" class="headerlink" title=".fade"></a>.fade</h3><p>​    当模态框切换时，它会引起内容淡入淡出</p><h3 id="tabindex"><a href="#tabindex" class="headerlink" title="tabindex"></a>tabindex</h3><ul><li>tabindex = -1：该元素无法用tab键获取焦点。用js，jq等获取可以，按tab键将会跳过这个<div></li><li>tabindex = 0：该元素可以用tab键获取焦点，且访问顺序是按照元素在文档中的顺序来的</li><li>tabindex = X (X  &gt;= 1)：该元素可以用tab键获取焦点，优先级大于tabindex = 0，且X越小，越先定位到</li></ul><h3 id="role-“dialog”"><a href="#role-“dialog”" class="headerlink" title="role = “dialog”"></a>role = “dialog”</h3><p>​    指定模态框为对话框</p><h3 id="aria-labelledby-”myModalLabel”"><a href="#aria-labelledby-”myModalLabel”" class="headerlink" title="aria-labelledby=”myModalLabel”"></a>aria-labelledby=”myModalLabel”</h3><p>​    该属性引用模态框的标题</p><p><strong>aria-hidden=”true”</strong> </p><p>​    用于保持模态窗口不可见，直到触发器被触发为止（点击按钮或连接）</p><h3 id="modal-header"><a href="#modal-header" class="headerlink" title=".modal-header"></a>.modal-header</h3><p>​    为模态框的头部定义样式</p><h3 id="modal-body"><a href="#modal-body" class="headerlink" title=".modal-body"></a>.modal-body</h3><p>​    为模态框的主题设置样式</p><h3 id="form-horizontal"><a href="#form-horizontal" class="headerlink" title=".form-horizontal"></a>.form-horizontal</h3><ul><li>设置表单控件padding和margin值</li><li>改变.form-group的表现形式，类似于网格系统的row</li></ul><h3 id="form-group"><a href="#form-group" class="headerlink" title=".form-group"></a>.form-group</h3><p>​    增加盒子的下边界</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决“There is no locally stored library”的方法</title>
      <link href="/2020/01/07/20200107/"/>
      <url>/2020/01/07/20200107/</url>
      
        <content type="html"><![CDATA[<h1 id="解决“There-is-no-locally-stored-library”的方法"><a href="#解决“There-is-no-locally-stored-library”的方法" class="headerlink" title="解决“There is no locally stored library”的方法"></a>解决“There is no locally stored library”的方法</h1><pre><code>&lt;script src=&quot;https://cdn.bootcss.com/jquery/2.2.1/jquery.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>用WebStorm进行前端开发时，导入此代码时发生错误，无法读取文件，报错“There is no locally stored library”</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>当鼠标停留在报错语句上时，按Alt + Enter，会出现解决方法，下载library到本地即可</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 错误解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20191225</title>
      <link href="/2019/12/25/20191225/"/>
      <url>/2019/12/25/20191225/</url>
      
        <content type="html"><![CDATA[<h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2>]]></content>
      
      
      <categories>
          
          <category> 随笔日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firstblog</title>
      <link href="/2019/12/17/firstblog/"/>
      <url>/2019/12/17/firstblog/</url>
      
        <content type="html"><![CDATA[<h2 id="第一篇blog"><a href="#第一篇blog" class="headerlink" title="第一篇blog"></a>第一篇blog</h2><h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><p>写一些每天的所思所想，万一哪天我死了，无论是自然死亡还是非自然死亡，这就是我曾经存在于在这个世界上的证据，把自己的每天的开心与不开心写下来，也算是贯彻吾日三省吾身吧，可能会改变一些事情</p><p>偶尔写一些技术文章， 方便自己查阅，如果可能的话，也提供给需要的人</p><p>嗯，暂时就这样吧</p>]]></content>
      
      
      <categories>
          
          <category> 随笔日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 夏季八写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/12/17/hello-world/"/>
      <url>/2019/12/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
